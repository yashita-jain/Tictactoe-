{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","i","squares","renderSquare","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","type","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIMA,E,4JAGL,WAAU,IAAD,OAEN,OACE,wBAAQC,UAAU,SAClBC,QAAS,kBAAI,EAAKC,MAAMD,WADxB,SAEGE,KAAKD,MAAME,Y,GARCC,IAAMC,WAcrBC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OAAO,cAACT,EAAD,CAAQK,MAAOD,KAAKD,MAAMO,QAAQD,GACzCP,QAAS,kBAAI,EAAKC,MAAMD,QAAQO,Q,oBAIlC,WACG,OACC,gCACE,sBAAKR,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKV,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKV,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GAvBTL,IAAMC,WA8BpBK,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,QAAS,CAAC,CACRJ,QAASK,MAAM,GAAGC,KAAK,QAEzBC,SAAS,EACTC,WAAY,GAPG,E,+CAWnB,SAAYT,GACV,IAAMK,EAAUV,KAAKS,MAAMC,QAAQK,MAAM,EAAGf,KAAKS,MAAMK,WAAa,GAE9DR,EADUI,EAAQA,EAAQM,OAAS,GACjBV,QAAQS,QAE5BE,EAAgBX,IAAYA,EAAQD,KAGxCC,EAAQD,GAAKL,KAAKS,MAAMI,QAAQ,IAAI,IAEpCb,KAAKkB,SAAS,CAAGR,QAASA,EAAQS,OAAO,CAAC,CACxCb,QAASA,KAEXQ,WAAYJ,EAAQM,OACtBH,SAAUb,KAAKS,MAAMI,a,oBAKrB,SAAOO,GACLpB,KAAKkB,SAAS,CACZJ,WAAYM,EACZP,QAAUO,EAAO,IAAO,M,oBAI5B,WAAU,IAgBJC,EAhBG,OACDX,EAAUV,KAAKS,MAAMC,QACrBY,EAAUZ,EAAQV,KAAKS,MAAMK,YAC7BS,EAASN,EAAgBK,EAAQhB,SAEjCkB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,6BACE,wBAAQE,KAAK,OAAO9B,QAAS,kBAAM,EAAK+B,OAAOH,IAA/C,SAAuDC,KADhDD,MAeb,OAPEL,EADEE,EACO,WAAaA,EAEA,IAAhBb,EAAQM,OAAoB,MAGzB,iBAAmBhB,KAAKS,MAAMI,QAAU,IAAM,KAEjD,qCACR,+CACE,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACA,cAACO,EAAD,CACIE,QAASgB,EAAQhB,QACjBR,QAAS,SAACO,GAAD,OAAO,EAAKyB,YAAYzB,QAIrC,sBAAKR,UAAU,YAAf,UACE,8BAAMwB,IACN,6BAAKG,iB,GA3EItB,IAAMC,WA0FzB,SAASc,EAAgBX,GAWvB,IAVA,IAAMyB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA1B,EAAI,EAAGA,EAAI0B,EAAMf,OAAQX,IAAK,CACrC,kBAAkB0B,EAAM1B,GAAxB,GAAO2B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI5B,EAAQ0B,IAAM1B,EAAQ0B,KAAO1B,EAAQ2B,IAAM3B,EAAQ0B,KAAO1B,EAAQ4B,GACpE,OAAO5B,EAAQ0B,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAC5B,EAAD,IACA6B,SAASC,eAAe,W","file":"static/js/main.79eb0495.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component {\r\n \r\n  \r\n render() {\r\n    \r\n    return (\r\n      <button className=\"square\" \r\n      onClick={()=>this.props.onClick()}>\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square value={this.props.squares[i]}\r\n    onClick={()=>this.props.onClick(i)}\r\n    />;\r\n  }\r\n\r\n  render() {\r\n     return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    \r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext?'X':'O';\r\n\r\n    this.setState({  history: history.concat([{\r\n      squares: squares,\r\n    }]),\r\n    stepNumber: history.length,\r\n  xIsNext: !this.state.xIsNext,\r\n  }\r\n      );\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button type=\"bttn\" onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } \r\n    else if(history.length==10){ status='Tie'}\r\n    \r\n    else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n    return (<>\r\n    <h1> Tic Tac Toe </h1>\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n        <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n         />\r\n\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}